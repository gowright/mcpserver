name: Publish MCP Server

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        working-directory: .
        run: npm ci

      - name: Build project
        working-directory: .
        run: npm run build

      - name: Make executable
        working-directory: .
        run: chmod +x dist/index.js

      - name: Validate build
        working-directory: .
        run: |
          echo '{"jsonrpc":"2.0","id":1,"method":"tools/list","params":{}}' | node dist/index.js

      - name: Configure git
        run: |
          # Check if git is available (may not be in some CI environments)
          set +e  # Disable exit on error temporarily
          command -v git >/dev/null 2>&1
          if [ $? -eq 0 ]; then
            set -e  # Re-enable exit on error
            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            echo "Git configured successfully"
          else
            set -e  # Re-enable exit on error
            echo "Git not available, skipping git configuration"
          fi

      - name: Bump version (manual trigger)
        if: github.event_name == 'workflow_dispatch'
        working-directory: .
        run: |
          # Check if git is available before attempting version bump
          set +e
          command -v git >/dev/null 2>&1
          if [ $? -eq 0 ]; then
            set -e
            npm version ${{ github.event.inputs.version_type }}
            git push origin "HEAD:${{ github.ref_name }}"
            git push --tags
          else
            set -e
            echo "Git not available, skipping version bump and push"
            npm version ${{ github.event.inputs.version_type }} --no-git-tag-version
          fi

      - name: Get version
        id: version
        working-directory: .
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Publish to npm
        working-directory: .
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: MCP Server v${{ steps.version.outputs.version }}
          body: |
            ## Gowright MCP Server v${{ steps.version.outputs.version }}
            
            ### Installation
            ```bash
            uvx gowright-mcp-server@${{ steps.version.outputs.version }}
            ```
            
            ### MCP Configuration
            ```json
            {
              "mcpServers": {
                "gowright": {
                  "command": "uvx",
                  "args": ["gowright-mcp-server@${{ steps.version.outputs.version }}"]
                }
              }
            }
            ```
          draft: false
          prerelease: false